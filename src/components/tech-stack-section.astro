---
import Icon from "astro-icon";

interface TechStackItem {
  title: string;
  icon: string;
}

interface TechStackCategory {
  title: string;
  description: string;
  items: TechStackItem[];
}

const categories: TechStackCategory[] = [
  {
    title: "Backend",
    description: "Mostly compiled languages with strong typing",
    items: [
      {
        title: "Rust",
        icon: "simple-icons:rust",
      },
      {
        title: "Go",
        icon: "simple-icons:go",
      },
      {
        title: "PHP",
        icon: "mdi:language-php",
      },
    ],
  },
  {
    title: "Databases",
    description: "SQL & NoSQL",
    items: [
      {
        title: "PostgreSQL",
        icon: "cib:postgresql",
      },
      {
        title: "MySQL",
        icon: "simple-icons:mysql",
      },
      {
        title: "Sqlite",
        icon: "simple-icons:sqlite",
      },
      {
        title: "MongoDB",
        icon: "cib:mongodb",
      },
    ],
  },
  {
    title: "Frontend",
    description: "I always try to have a good balance between server-side and client-side rendering to have the best of both worlds",
    items: [
      {
        title: "React",
        icon: "ion:logo-react",
      },
      {
        title: "HTML",
        icon: "akar-icons:html-fill",
      },
      {
        title: "CSS",
        icon: "akar-icons:css-fill",
      },
      {
        title: "Tailwind",
        icon: "mdi:tailwind",
      },
      {
        title: "JavaScript",
        icon: "teenyicons:javascript-solid",
      },
      {
        title: "TypeScript",
        icon: "teenyicons:typescript-solid",
      },
      {
        title: "Next.js",
        icon: "teenyicons:nextjs-solid",
      },
      {
        title: "Astro",
        icon: "simple-icons:astro",
      },
    ],
  },
  {
    title: "Infrastructure",
    description: "Scalable, secure, robust, fast, replicable",
    items: [
      {
        title: "Terraform",
        icon: "cib:terraform",
      },
      {
        title: "Kubernetes",
        icon: "simple-icons:kubernetes",
      },
      {
        title: "Helm",
        icon: "simple-icons:helm",
      },
      {
        title: "Docker",
        icon: "cib:docker",
      },
      {
        title: 'Google Cloud',
        icon: 'simple-icons:googlecloud'
      },
      {
        title: 'AWS',
        icon: 'mdi:aws'
      },
      {
        title: 'Azure',
        icon: 'codicon:azure'
      },
    ],
  },
  {
    title: "DevOps",
    description: "To ensure a seamless software delivery process",
    items: [
      {
        title: "GitHub Actions",
        icon: "cib:github",
      },
      {
        title: "GitLab Pipelines",
        icon: "simple-icons:gitlab",
      },
    ],
  },
];
---

<div class="mt-24 max-w-3xl mx-auto flex flex-col items-center justify-center">
  <h2 class="text-4xl lg:text-5xl font-bold lg:tracking-tight text-center">
    My tech stack
  </h2>
</div>
<div class="flex flex-wrap py-8 gap-y-10">
  {
    categories.map((cat) => (
      <>
        <div class="md:hidden flex flex-col justify-between gap-4 w-[500px] mx-auto p-5 rounded-lg transition-all border border-transparent hover:border-slate-100 hover:bg-slate-50">
          <div class="">
            <h3 class="font-semibold text-lg text-indigo-500">{cat.title}</h3>
            <p class="text-slate-500 mt-2 leading-relaxed">{cat.description}</p>
          </div>
          <div class="flex flex-col gap-2">
            {cat.items.map((item) => (
              <div class="flex gap-4 items-center">
                <div class="w-[30px]">
                  <Icon class="w-8 h-8 opacity-60" name={item.icon} />
                </div>
                {item.title}
              </div>
            ))}
          </div>
        </div>
        <div class="max-md:hidden flex justify-between gap-4 w-[500px] mx-auto p-5 rounded-lg transition-all border border-transparent hover:border-slate-100 hover:bg-slate-50">
          <div class="w-[50%]">
            <h3 class="font-semibold text-lg text-indigo-500">{cat.title}</h3>
            <p class="text-slate-500 mt-2 leading-relaxed">{cat.description}</p>
          </div>
          <div class="w-[50%] flex flex-col gap-2">
            {cat.items.map((item) => (
              <div class="flex gap-4 items-center">
                <div class="w-[30px]">
                  <Icon class="w-8 h-8 opacity-60" name={item.icon} />
                </div>
                {item.title}
              </div>
            ))}
          </div>
        </div>
      </>
    ))
  }
</div>
